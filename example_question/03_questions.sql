-- Questions 생성
INSERT INTO question_question (
    map_id, 
    title, 
    question_types, 
    description, 
    answer_validation_type, 
    is_by_pass,
    default_success_feedback,
    default_failure_feedback,
    is_deleted,
    created_at,
    updated_at
) VALUES
-- Java 기초
(2, 'Java 개발 환경 구축하기', 
 ARRAY['file'], 
 'JDK를 설치하고 IDE를 설정한 후, 다음 내용을 포함한 스크린샷을 제출하세요:\n1. java -version 명령어 실행 결과\n2. IDE에서 Hello World 프로그램 실행 화면', 
 'manual', true,
 'Java 개발 환경이 정상적으로 구축되었습니다!',
 '개발 환경 설정을 다시 확인해주세요.',
 false, NOW(), NOW()),

(2, 'Java 기초 문법 실습', 
 ARRAY['text'], 
 'System.out.println()을 사용하여 다음과 같은 출력을 만드세요: "Hello, Java Programming!"', 
 'text_exact', false,
 '정확한 출력 결과를 만들었습니다!',
 '출력 문자열을 정확히 입력했는지 확인해보세요.',
 false, NOW(), NOW()),

(2, '객체지향 프로그래밍 실습', 
 ARRAY['text'], 
 '다음 요구사항에 맞는 클래스를 작성하세요:\n1. Animal 클래스 생성\n2. sound() 메서드 구현\n3. Dog 클래스가 Animal을 상속\n4. Dog에서 sound() 메서드 오버라이딩', 
 'text_contains', false,
 'OOP 개념을 잘 이해하고 있습니다!',
 '상속과 오버라이딩 구현을 다시 확인해보세요.',
 false, NOW(), NOW()),

-- Java 심화
(2, '컬렉션 프레임워크 활용', 
 ARRAY['text'], 
 'ArrayList<String>을 사용하여 다음 작업을 수행하는 코드를 작성하세요:\n1. 이름 추가\n2. 이름 검색\n3. 이름 삭제\n코드와 실행 결과를 함께 제출하세요.', 
 'text_contains', false,
 '컬렉션 프레임워크를 잘 활용했습니다!',
 '리스트 조작 방법을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, '예외 처리 구현하기', 
 ARRAY['text'], 
 '파일 입출력 시 발생할 수 있는 예외를 처리하는 코드를 작성하세요.\n다음 예외들을 처리해야 합니다:\n1. FileNotFoundException\n2. IOException', 
 'text_contains', false,
 '예외 처리가 적절히 구현되었습니다!',
 '필요한 예외 처리가 모두 포함되었는지 확인해보세요.',
 false, NOW(), NOW()),

(2, '스트림 API 실습', 
 ARRAY['text'], 
 '주어진 정수 리스트에서 짝수만 필터링하고 정렬하는 스트림 연산을 작성하세요.\n입력: [5, 2, 8, 1, 9, 4]\n예상 출력: [2, 4, 8]', 
 'text_exact', false,
 '스트림 연산을 정확히 구현했습니다!',
 '필터링과 정렬 연산을 다시 확인해보세요.',
 false, NOW(), NOW()),

-- 백엔드 기초
(2, 'SQL 기초 실습', 
 ARRAY['text'], 
 '다음 요구사항에 맞는 SQL 쿼리를 작성하세요:\n1. 사용자 테이블 생성 (CREATE TABLE)\n2. 데이터 삽입 (INSERT)\n3. 조건에 맞는 데이터 조회 (SELECT)', 
 'text_contains', false,
 'SQL 쿼리가 정확히 작성되었습니다!',
 'SQL 문법을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, 'JDBC 프로그래밍', 
 ARRAY['text', 'file'], 
 'JDBC를 사용하여 데이터베이스에 연결하고 다음 작업을 수행하세요:\n1. 데이터베이스 연결\n2. PreparedStatement를 사용한 데이터 삽입\n3. ResultSet을 사용한 데이터 조회\n코드와 실행 결과 스크린샷을 제출하세요.', 
 'manual', true,
 'JDBC 프로그래밍이 잘 구현되었습니다!',
 '데이터베이스 연결과 쿼리 실행을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, '서블릿/JSP 실습', 
 ARRAY['text', 'file'], 
 '간단한 웹 애플리케이션을 구현하세요:\n1. 사용자 정보를 입력받는 JSP 페이지\n2. 입력 정보를 처리하는 서블릿\n3. 결과를 보여주는 JSP 페이지\n코드와 실행 화면 캡처를 제출하세요.', 
 'manual', true,
 '서블릿/JSP 구현이 잘 되었습니다!',
 '웹 애플리케이션 흐름을 다시 확인해보세요.',
 false, NOW(), NOW()),

-- Spring 프레임워크
(2, 'Spring Core 실습', 
 ARRAY['text'], 
 'Spring IoC/DI를 구현하세요:\n1. BookService 인터페이스 생성\n2. BookServiceImpl 구현 클래스 작성\n3. BookRepository 의존성 주입\n4. Spring Bean 설정', 
 'text_contains', false,
 'Spring Core 개념을 잘 이해했습니다!',
 'DI 패턴을 다시 검토해보세요.',
 false, NOW(), NOW()),

(2, 'Spring MVC 구현', 
 ARRAY['text', 'file'], 
 '도서 관리 시스템의 웹 계층을 구현하세요:\n1. BookController 작성\n2. 도서 목록/등록/수정/삭제 기능 구현\n3. Thymeleaf 템플릿 작성\n코드와 실행 화면을 제출하세요.', 
 'manual', true,
 'MVC 패턴이 잘 구현되었습니다!',
 '컨트롤러와 뷰의 연동을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, 'Spring Boot 실습', 
 ARRAY['text', 'file'], 
 'Spring Boot 프로젝트를 생성하고 다음을 구현하세요:\n1. REST API 엔드포인트 구현\n2. 외부 설정 파일 작성\n3. 애플리케이션 실행 및 테스트\n구현 코드와 Postman 테스트 결과를 제출하세요.', 
 'manual', true,
 'Spring Boot 애플리케이션이 잘 구현되었습니다!',
 'API 설계와 구현을 다시 검토해보세요.',
 false, NOW(), NOW()),

-- 백엔드 심화
(2, 'JPA/Hibernate 실습', 
 ARRAY['text'], 
 'JPA를 사용하여 엔티티를 구현하세요:\n1. Book, Author 엔티티 생성\n2. 다대다 관계 매핑\n3. JPQL을 사용한 조회 쿼리 작성', 
 'text_contains', false,
 'JPA 엔티티 매핑이 잘 되었습니다!',
 '연관관계 매핑을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, 'Spring Security 구현', 
 ARRAY['text', 'file'], 
 '보안 기능을 구현하세요:\n1. 사용자 인증 구현\n2. 권한 기반 접근 제어\n3. OAuth2 소셜 로그인\n구현 코드와 테스트 결과를 제출하세요.', 
 'manual', true,
 '보안 기능이 잘 구현되었습니다!',
 '인증/인가 흐름을 다시 검토해보세요.',
 false, NOW(), NOW()),

(2, 'REST API 개발', 
 ARRAY['text'], 
 'RESTful API를 설계하고 구현하세요:\n1. API 엔드포인트 설계\n2. HTTP 메서드 활용\n3. 응답 상태 코드 처리\n4. API 문서화', 
 'text_contains', false,
 'REST API가 잘 설계되었습니다!',
 'RESTful 원칙을 다시 검토해보세요.',
 false, NOW(), NOW()),

-- 실전/운영
(2, '테스트 코드 작성', 
 ARRAY['text'], 
 'JUnit을 사용하여 테스트를 작성하세요:\n1. 단위 테스트 작성\n2. Mockito를 사용한 목 객체 활용\n3. 통합 테스트 구현', 
 'text_contains', false,
 '테스트 코드가 잘 작성되었습니다!',
 '테스트 케이스 구성을 다시 검토해보세요.',
 false, NOW(), NOW()),

(2, '성능 최적화 실습', 
 ARRAY['text', 'file'], 
 '애플리케이션 성능을 최적화하세요:\n1. JPA N+1 문제 해결\n2. 캐시 적용\n3. 쿼리 최적화\n코드와 성능 측정 결과를 제출하세요.', 
 'manual', true,
 '성능 최적화가 잘 되었습니다!',
 '병목 지점을 다시 분석해보세요.',
 false, NOW(), NOW()),

(2, '배포 환경 구축', 
 ARRAY['text', 'file'], 
 'CI/CD 파이프라인을 구축하세요:\n1. Jenkins 파이프라인 구성\n2. Docker 컨테이너화\n3. AWS 배포 자동화\n구성 파일과 배포 결과를 제출하세요.', 
 'manual', true,
 '배포 환경이 잘 구축되었습니다!',
 '파이프라인 구성을 다시 검토해보세요.',
 false, NOW(), NOW()),

-- Spring Boot 진입을 위한 추가 Question들
(2, 'JPA 기초 실습', 
 ARRAY['text'], 
 '다음 요구사항에 맞는 JPA Entity를 작성하세요:\n1. Member 엔티티 생성\n2. @Entity, @Id 애노테이션 사용\n3. 기본 필드 매핑\n4. 연관관계 매핑 (Team과 일대다 관계)', 
 'text_contains', false,
 'JPA Entity가 잘 설계되었습니다!',
 'Entity 매핑을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, 'REST API 기초 실습', 
 ARRAY['text'], 
 'REST API 설계 원칙에 따라 다음 API를 설계하세요:\n1. 회원 목록 조회\n2. 회원 상세 조회\n3. 회원 등록\n4. 회원 정보 수정\n5. 회원 삭제\n각 API의 HTTP 메서드, URL, 요청/응답 구조를 명시하세요.', 
 'text_contains', false,
 'REST API가 원칙에 맞게 설계되었습니다!',
 'HTTP 메서드와 리소스 설계를 다시 검토해보세요.',
 false, NOW(), NOW()),

(2, 'Spring Data JPA 실습', 
 ARRAY['text', 'file'], 
 'Spring Data JPA Repository를 구현하세요:\n1. JpaRepository 상속\n2. 사용자 정의 쿼리 메서드 작성\n3. @Query 애노테이션 활용\n4. 페이징과 정렬 구현\n구현 코드와 테스트 결과를 제출하세요.', 
 'manual', true,
 'Spring Data JPA 기능이 잘 구현되었습니다!',
 'Repository 메서드 구현을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, 'API 문서화 실습', 
 ARRAY['text', 'file'], 
 'Swagger/OpenAPI를 사용하여 API를 문서화하세요:\n1. Swagger 설정\n2. @Api* 애노테이션 활용\n3. API 요청/응답 명세 작성\n4. API 테스트 페이지 구성\n문서화된 API 스펙과 Swagger UI 스크린샷을 제출하세요.', 
 'manual', true,
 'API 문서화가 잘 되었습니다!',
 'Swagger 설정과 애노테이션을 다시 확인해보세요.',
 false, NOW(), NOW()),

-- 시작 Node들의 Questions
(2, 'JPA 시작하기', 
 ARRAY['file'], 
 'JPA 학습을 위한 개발 환경을 구성하세요:\n1. Maven/Gradle 프로젝트 생성\n2. JPA 의존성 추가\n3. persistence.xml 설정\n구성된 프로젝트의 스크린샷을 제출하세요.', 
 'manual', true,
 'JPA 학습 환경이 잘 구성되었습니다!',
 '프로젝트 설정을 다시 확인해보세요.',
 false, NOW(), NOW()),

(2, 'REST API 시작하기', 
 ARRAY['file'], 
 'REST API 학습을 위한 환경을 준비하세요:\n1. Postman 설치\n2. 간단한 REST API 서버 설정\n3. HTTP 요청/응답 테스트\n환경 구성 스크린샷을 제출하세요.', 
 'manual', true,
 'REST API 학습 환경이 잘 구성되었습니다!',
 '개발 환경 설정을 다시 확인해보세요.',
 false, NOW(), NOW()); 